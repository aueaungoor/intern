import { CommonModule } from '@angular/common';
import { Component } from '@angular/core';
import { FormBuilder, FormGroup, ReactiveFormsModule } from '@angular/forms';
import { Router, RouterModule } from '@angular/router';
import { AccountService } from './login.service';



@Component({
  selector: 'app-login',
  imports: [
    CommonModule,             // ‚úÖ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö *ngIf, *ngFor
    ReactiveFormsModule,      // ‚úÖ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö formGroup/formControlName
    RouterModule            // ‚úÖ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö routerLink ‡πÅ‡∏•‡∏∞ Router
  ],
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css'] // ‚úÖ ‡πÅ‡∏Å‡πâ styleUrl ‚Üí styleUrls
})
export class LoginComponent {
  loginForm: FormGroup;

  constructor(private fb: FormBuilder,
    public router: Router,
    private accountService: AccountService
  ) {
    this.loginForm = this.fb.group({
      username: [''],
      password: ['']
    });
  }

  onSubmit(): void {
    if (this.loginForm.valid) {
      const loginData = this.loginForm.value;
  
      this.accountService.checkLogin(loginData).subscribe({
        next: (res) => {
          console.log('‚úÖ Login success:', res);
  
          // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ username ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏à‡∏£‡∏¥‡∏á
          if (res) {
            localStorage.setItem('isLoggedIn', 'true');
            console.log('üîÅ Redirecting...');
            this.router.navigate(['/mainpage']);
          } else {
            alert('‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
          }
        },
        error: (err) => {
          console.error('‚ùå Login failed:', err);
          alert('‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
        }
      });
    }
  }
  

  
  
}


